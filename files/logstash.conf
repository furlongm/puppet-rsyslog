input {
    tcp {
        type => "rsyslog"
        port => "20515"
        host => "127.0.0.1"
    }
}

filter {
    grep {
        type => "rsyslog"
        negate => true
        match => [ "@message", ".*last message repeated.*" ]
    }
    grok {
        type => "rsyslog"
        pattern => "\<%{WORD:syslogfacility}\.%{WORD:syslogpriority}\> %{SYSLOGLINE}"
        add_field => [ "type", "syslog" ]
        add_field => [ "fullprogram", "%{program}" ]
        remove_tag => "_grokparsefailure"
    }
    grok {
        type => "rsyslog"
        tags => "_grokparsefailure"
        pattern => "\<%{WORD:syslogfacility}\.%{WORD:syslogpriority}\> (%{SYSLOGTIMESTAMP:timestamp}|%{TIMESTAMP_ISO8601:timestamp8601}) (%{SYSLOGFACILITY} )?(%{SYSLOGHOST:logsource} )?(%{DATESTAMP:openstack_timestamp} )?(%{POSINT:pid} )?([ ]*%{AUDITLOGLEVEL:auditlevel}[ ]*)?\[*?%{WORD:program}\.?%{PROG:program_path}?\]* %{GREEDYDATA:message}"
        add_field => [ "type", "%{program}" ]
        add_field => [ "fullprogram", "%{program}.%{program_path}" ]
        remove_tag => "_grokparsefailure"
    }
}

output {
    elasticsearch {
        cluster => "logstash"
        host => "127.0.0.1"
        port => "9300"
        type => "rsyslog"
    }
}
